#!/usr/bin/env bash

# Shell prompt based on Solarized Dark theme (macOS 14.5 optimized)

# Set TERM for better color support
if [[ $COLORTERM == gnome-* ]] && [[ $TERM == xterm ]] && infocmp gnome-256color &>/dev/null; then
    export TERM='gnome-256color'
elif infocmp xterm-256color &>/dev/null; then
    export TERM='xterm-256color'
fi

# Function to generate Git status information
prompt_git() {
    local s="" branchName=""

    # Check if inside a Git repo and get branch name
    if git rev-parse --is-inside-work-tree &>/dev/null; then
        branchName="$(git symbolic-ref --short HEAD 2>/dev/null || git describe --all --exact-match HEAD 2>/dev/null || git rev-parse --short HEAD)"

        # Skip expensive dirty check for large repos (e.g., Chromium)
        repoUrl="$(git config --get remote.origin.url)"
        if ! grep -q 'chromium/src.git' <<< "$repoUrl"; then
            # Build Git status string based on various conditions
            [[ -n $(git diff --cached --ignore-submodules) ]] && s+="+"
            [[ -n $(git diff-files --ignore-submodules) ]] && s+="!"
            [[ -n $(git ls-files --others --exclude-standard) ]] && s+="?"
            git rev-parse --verify refs/stash &>/dev/null && s+="$"
        fi

        [[ -n "$s" ]] && s=" [$s]"
    fi
    echo -e "${1}${branchName}${2}${s}"
}

# Color Setup
# Use modern syntax for tput calls:
if tput setaf 1 >/dev/null 2>&1; then # Better error handling
    tput sgr0
    bold=$(tput bold)
    reset=$(tput sgr0)
    black=$(tput setaf 0)
    blue=$(tput setaf 33)
    cyan=$(tput setaf 37)
    green=$(tput setaf 64)
    orange=$(tput setaf 166)
    purple=$(tput setaf 125)
    red=$(tput setaf 124)
    violet=$(tput setaf 61)
    white=$(tput setaf 15)
    yellow=$(tput setaf 136)
else  # Fallback to basic ANSI escape codes
    bold=''
    reset="\e[0m"
    # ... (rest of the ANSI colors)
fi

# User and Host Styling
userStyle="${USER}" == "root" ? "${red}" : "${orange}"
hostStyle="${SSH_TTY:+${bold}${red}}" || "${yellow}"  # Ternary operator for conditionals

# Prompt Construction (using PS1)
PS1="\[\033]0;\W\007\]"              # Set terminal title
PS1+="\[${bold}\]\n"              # Newline
PS1+="\[${userStyle}\]\u"        # Username
PS1+="\[${white}\] at "
PS1+="\[${hostStyle}\]\h"        # Hostname
PS1+="\[${white}\] in "
PS1+="\[${green}\]\w"            # Current directory
PS1+="\$(prompt_git \"\[${white}\] on \[${violet}\]\" \"\[${blue}\]\")"  # Git info
PS1+="\n"
PS1+="\[${white}\]\$ \[${reset}\]"  # $ and color reset

# Secondary prompt
PS2="\[${yellow}\]â†’ \[${reset}\]" 

# Export the prompt variables
export PS1 PS2
